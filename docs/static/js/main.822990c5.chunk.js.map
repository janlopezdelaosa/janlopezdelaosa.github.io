{"version":3,"sources":["components/Header.tsx","components/Footer.tsx","api/defs.ts","api/locations.ts","utils/useDebounce.ts","components/NoData.tsx","svg/Search.tsx","svg/Cross.tsx","components/InputBox.tsx","api/forecast.ts","components/DateSummaryForecast.tsx","components/DateHourlyForecast.tsx","components/WeeklyForecast.tsx","components/ErrorBoundary.tsx","components/Loading.tsx","App.tsx","index.tsx"],"names":["Header","className","dayjs","format","Footer","apiBase","useLocations","endPoint","useQuery","a","fetch","response","ok","json","data","Error","msg","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","NoData","message","suggestion","data-cy","Cross","fill","onClick","xmlns","viewBox","fillRule","d","clipRule","InputBox","setCity","term","setTerm","debouncedTerm","isCitySelected","setIsCitySelected","locations","searchCity","useCallback","t","l","location","filter","name","country","undefined","slug","type","placeholder","list","onChange","e","target","Search","id","map","useForecast","start","end","pLocation","pStart","pEnd","refetchInterval","DateSummaryForecast","isSelected","date","max","min","DateHourlyForecast","hourly","selected","setSelected","i","WeeklyForecast","city","days","now","Date","startDate","UTC","getFullYear","getMonth","getDate","startStr","toISOString","split","finishDate","setDate","finishStr","forecast","setHourly","length","Math","ErrorBoundary","props","state","hasError","this","children","error","React","Component","Loading","resource","App","queryClient","QueryClient","defaultOptions","queries","suspense","QueryClientProvider","client","fallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.822990c5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport dayjs from \"dayjs\";\r\n\r\ninterface HeaderProps {}\r\n\r\nconst Header: React.FC<HeaderProps> = () => {\r\n  return (\r\n    <div className=\"p-4 md:px-20 flex justify-between items-center\">\r\n      <h2 className=\"font-extrabold uppercase lg:text-2xl\">\r\n        Weather Forecaster\r\n      </h2>\r\n      <p className=\"text-xs lg:text-lg\">\r\n        {dayjs().format(\"MMMM D, YYYY | HH:mm\")}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\ninterface FooterProps {}\r\n\r\nconst Footer: React.FC<FooterProps> = () => {\r\n  return (\r\n    <div className=\"p-4 flex flex-row-reverse\">\r\n      <p className=\"text-xs\">janlopezdelaosa@gmail.com</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","// export const apiBase = \"http://localhost:80\";\r\nexport const apiBase = \"https://morning-falls-52071.herokuapp.com\";\r\n\r\nexport interface LocationData {\r\n  country: string;\r\n  name: string;\r\n  slug: string;\r\n}\r\n\r\nexport type ForecastData = {\r\n  date: string;\r\n  hourly: number[];\r\n  locationSlug: string;\r\n};\r\n","import { useQuery } from \"react-query\";\r\nimport { apiBase, LocationData } from \"./defs\";\r\n\r\nfunction useLocations(): LocationData[] {\r\n  const endPoint = `${apiBase}/locations`;\r\n\r\n  const query = useQuery(\"locations\", async () => {\r\n    const response = await fetch(endPoint);\r\n    if (!response.ok) {\r\n      const data = await response.json();\r\n      throw new Error(data.msg);\r\n    } else {\r\n      return response.json();\r\n    }\r\n  });\r\n\r\n  return query.data;\r\n}\r\n\r\nexport default useLocations;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nfunction useDebounce<T>(value: T, delay: number) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n\r\nexport default useDebounce;\r\n","import React from \"react\";\r\n\r\ninterface NoDataProps {\r\n  className?: string;\r\n  message?: string;\r\n  suggestion?: string;\r\n}\r\n\r\nconst NoData: React.FC<NoDataProps> = ({\r\n  className = \"\",\r\n  message = \"There is no available data.\",\r\n  suggestion = \"Try another city from the list.\",\r\n}) => {\r\n  return (\r\n    <div className={`p-4 md:p-6 self-center text-center ${className}`}>\r\n      <p data-cy=\"msg\">{message}</p>\r\n      <p>{suggestion}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoData;\r\n","import React from \"react\";\r\n\r\ninterface CrossProps {\r\n  fill?: string;\r\n  className?: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst Cross: React.FC<CrossProps> = ({\r\n  fill = \"currentColor\",\r\n  className = \"\",\r\n  onClick = () => {},\r\n}) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 20 20\"\r\n      fill={fill}\r\n      className={className}\r\n      onClick={onClick}\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cross;\r\n","import React from \"react\";\r\n\r\ninterface CrossProps {\r\n  fill?: string;\r\n  className?: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst Cross: React.FC<CrossProps> = ({\r\n  fill = \"currentColor\",\r\n  className = \"\",\r\n  onClick = () => {},\r\n}) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 20 20\"\r\n      fill={fill}\r\n      className={className}\r\n      onClick={onClick}\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cross;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { LocationData } from \"../api/defs\";\r\nimport useLocations from \"../api/locations\";\r\nimport useDebounce from \"../utils/useDebounce\";\r\nimport NoData from \"./NoData\";\r\nimport Search from \"../svg/Search\";\r\nimport Cross from \"../svg/Cross\";\r\n\r\ninterface InputBoxProps {\r\n  setCity: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst InputBox: React.FC<InputBoxProps> = ({ setCity }) => {\r\n  const [term, setTerm] = useState(\"\");\r\n  const debouncedTerm = useDebounce(term, 500);\r\n  const [isCitySelected, setIsCitySelected] = useState(false);\r\n  const locations = useLocations();\r\n\r\n  const searchCity = useCallback(\r\n    (t: string, l: LocationData[]) => {\r\n      const location = locations?.filter(\r\n        (l) => `${l.name}, ${l.country}` === t\r\n      )[0];\r\n      if (location !== undefined) {\r\n        setCity(location.slug);\r\n        setIsCitySelected(true);\r\n      } else {\r\n        setCity(\"\");\r\n        setIsCitySelected(false);\r\n      }\r\n    },\r\n    [setCity, locations]\r\n  );\r\n\r\n  useEffect(() => {\r\n    searchCity(debouncedTerm, locations);\r\n  }, [searchCity, debouncedTerm, locations]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col w-full\">\r\n        <div className=\"relative w-full\">\r\n          <input\r\n            className={`w-full pl-10 lg:pl-14 pr-1 py-1 border-black border-solid rounded-lg border-2 outline-none ${\r\n              isCitySelected ? \"font-bold\" : \"\"\r\n            } lg:text-xl`}\r\n            data-cy=\"input\"\r\n            type=\"text\"\r\n            placeholder=\"City, Country\"\r\n            list=\"cities\"\r\n            onChange={(e) => setTerm(e.target.value)}\r\n            value={term}\r\n          />\r\n          <div className=\"absolute inset-0 flex items-align justify-between pointer-events-none\">\r\n            <Search className=\"ml-3 lg:ml-5 w-5\" />\r\n            {term && (\r\n              <Cross\r\n                className=\"mr-7 lg:mr-10 w-5 pointer-events-auto\"\r\n                onClick={() => {\r\n                  setTerm(\"\");\r\n                  setCity(\"\");\r\n                  setIsCitySelected(false);\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <datalist id=\"cities\">\r\n          {locations &&\r\n            locations.map((l) => (\r\n              <option key={l.slug}>{`${l.name}, ${l.country}`}</option>\r\n            ))}\r\n        </datalist>\r\n\r\n        {!isCitySelected && term && (\r\n          <NoData\r\n            className=\"pt-11 md:pt-12\"\r\n            message={`Location \"${debouncedTerm}\" doesn't exist in our database.`}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n","import { useQuery } from \"react-query\";\r\nimport { apiBase, ForecastData } from \"./defs\";\r\n\r\nfunction useForecast(slug: string, start: string, end: string): ForecastData[] {\r\n  const endPoint = `${apiBase}/forecast`;\r\n  const pLocation = `location=${slug}`;\r\n  const pStart = `start=${start}`;\r\n  const pEnd = `end=${end}`;\r\n  const refetchInterval = 5000;\r\n\r\n  const query = useQuery(\r\n    [\"forecast\", slug, start, end],\r\n    async () => {\r\n      const response = await fetch(\r\n        `${endPoint}?${pLocation}&${pStart}&${pEnd}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        throw new Error(data.msg);\r\n      } else {\r\n        return response.json();\r\n      }\r\n    },\r\n    {\r\n      refetchInterval,\r\n    }\r\n  );\r\n\r\n  return query.data;\r\n}\r\n\r\nexport default useForecast;\r\n","import React from \"react\";\r\nimport dayjs from \"dayjs\";\r\n\r\ninterface DateSummaryForecastProps {\r\n  isSelected: boolean;\r\n  date: string;\r\n  max: number;\r\n  min: number;\r\n  onClick: () => void;\r\n}\r\n\r\nconst DateSummaryForecast: React.FC<DateSummaryForecastProps> = ({\r\n  isSelected,\r\n  date,\r\n  max,\r\n  min,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <button\r\n      className={`p-4 md:p-6 m-2 md:m-4 flex flex-col items-center border-black border-solid rounded-lg border-2 outline-none transform hover:scale-105${\r\n        isSelected ? \" font-bold\" : \"\"\r\n      } focus:outline-none`}\r\n      data-cy=\"summary\"\r\n      onClick={onClick}\r\n    >\r\n      <p className=\"text-xl lg:text-2xl\">\r\n        {dayjs(date, \"MM-DD-YYYY\").format(\"DD MMM\")}\r\n      </p>\r\n      <div className=\"flex flex-row justify-between lg:text-lg\">\r\n        <p>\r\n          {min}º / {max}º\r\n        </p>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DateSummaryForecast;\r\n","import React, { useState } from \"react\";\r\n\r\ninterface DateHourlyForecastProps {\r\n  hourly: number[];\r\n}\r\n\r\nconst DateHourlyForecast: React.FC<DateHourlyForecastProps> = ({ hourly }) => {\r\n  const [selected, setSelected] = useState(-1);\r\n\r\n  return (\r\n    <div className=\"pt-8 grid grid-cols-2 md:grid-cols-6 grid-rows-12 md:grid-rows-4 grid-flow-col gap-y-2 md:gap-y-10 gap-x-12\">\r\n      {hourly?.map((d, i) => (\r\n        <button\r\n          className=\"flex flex-row items-center focus:outline-none\"\r\n          data-cy=\"hourly\"\r\n          key={i}\r\n          onClick={() => setSelected(i)}\r\n        >\r\n          <span\r\n            className={`${\r\n              selected === i ? \"font-normal\" : \"font-light\"\r\n            } md:text-lg`}\r\n          >\r\n            {i}h:\r\n          </span>{\" \"}\r\n          <span\r\n            className={`${\r\n              selected === i ? \"font-bold\" : \"font-normal\"\r\n            } ml-1 md:ml-3 text-lg md:text-xl`}\r\n          >\r\n            {d}º\r\n          </span>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateHourlyForecast;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useForecast from \"../api/forecast\";\r\nimport DateSummaryForecast from \"./DateSummaryForecast\";\r\nimport DateHourlyForecast from \"./DateHourlyForecast\";\r\nimport NoData from \"./NoData\";\r\n\r\ninterface WeeklyForecastProps {\r\n  city: string;\r\n  days?: number;\r\n}\r\n\r\nconst WeeklyForecast: React.FC<WeeklyForecastProps> = ({ city, days = 5 }) => {\r\n  const now = new Date();\r\n  const today = new Date(\r\n    Date.UTC(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0)\r\n  );\r\n\r\n  const startDate = today;\r\n  // ISO format example 2021-02-11T18:45:55.136Z\r\n  const startStr = startDate.toISOString().split(\"T\")[0];\r\n\r\n  let finishDate = new Date(startDate);\r\n  finishDate.setDate(finishDate.getDate() + days);\r\n  const finishStr = finishDate.toISOString().split(\"T\")[0];\r\n\r\n  const forecast = useForecast(city, startStr, finishStr);\r\n\r\n  const [hourly, setHourly] = useState<number[]>([]);\r\n\r\n  const [selected, setSelected] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    if (selected !== -1) {\r\n      setHourly(forecast[selected]?.hourly);\r\n    }\r\n  }, [forecast, selected]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-2 md:p-4 flex flex-wrap flex-row justify-center\">\r\n        {forecast !== undefined && forecast.length > 0 ? (\r\n          forecast?.map((d, i) => {\r\n            const min = Math.min(...d.hourly);\r\n            const max = Math.max(...d.hourly);\r\n            return (\r\n              <DateSummaryForecast\r\n                key={i}\r\n                isSelected={i === selected}\r\n                date={d.date}\r\n                max={max}\r\n                min={min}\r\n                onClick={() => {\r\n                  setHourly(d.hourly);\r\n                  setSelected(i);\r\n                }}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <NoData message=\"No forecast data for any of the following 5 days.\" />\r\n        )}\r\n      </div>\r\n      {hourly.length !== 0 && <DateHourlyForecast hourly={hourly} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeeklyForecast;\r\n","// Adapted from React docs: https://reactjs.org/docs/error-boundaries.html\r\n\r\nimport React from \"react\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: any) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    //@ts-ignore\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\r\n\r\ninterface LoadingProps {\r\n  className?: string;\r\n  resource?: string;\r\n}\r\n\r\nconst Loading: React.FC<LoadingProps> = ({ className = \"\", resource = \"\" }) => {\r\n  return (\r\n    <div className={`p-2 md:p-4 ${className}`}>\r\n      <p>Loading{resource && \" \" + resource}...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { Suspense, useState } from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport InputBox from \"./components/InputBox\";\nimport WeeklyForecast from \"./components/WeeklyForecast\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport Loading from \"./components/Loading\";\n\nconst App: React.FC = () => {\n  const [city, setCity] = useState(\"\");\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        suspense: true,\n      },\n    },\n  });\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div className=\"fixed top-0 left-0 right-0 bg-white z-10\">\n        <Header />\n\n        <div className=\"p-4 md:px-20 w-full flex justify-center\">\n          <ErrorBoundary>\n            <Suspense fallback={<Loading resource=\"locations\" />}>\n              <InputBox setCity={setCity} />\n            </Suspense>\n          </ErrorBoundary>\n        </div>\n      </div>\n\n      <div className=\"pt-32 pb-16 flex flex-col w-full items-center\">\n        <ErrorBoundary>\n          <Suspense\n            fallback={<Loading className=\"p-8 md:p-14\" resource=\"forecasts\" />}\n          >\n            {city !== \"\" && <WeeklyForecast city={city} />}\n          </Suspense>\n        </ErrorBoundary>\n      </div>\n\n      <div className=\"fixed bottom-0 left-0 right-0 bg-white z-10\">\n        <Footer />\n      </div>\n    </QueryClientProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}